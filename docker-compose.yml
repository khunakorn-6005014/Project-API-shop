version: '3.8'
# --- docker-compose.yml---
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - microservices-network

  kafka:
    image: confluentinc/cp-kafka:5.5.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"   # internal / containers
      - "9094:9094"   # external / localhost
    environment:
      # ZooKeeper connection
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181

      # Two listeners:
      #   INSIDE  – what other containers use (kafka:9092)
      #   OUTSIDE – what host tools use (localhost:9094)
      - KAFKA_ADVERTISED_LISTENERS=INSIDE://kafka:9092,OUTSIDE://localhost:9094
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      - KAFKA_LISTENERS=INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9094

      # Set inter-broker listener to one of the advertised listeners
      - KAFKA_INTER_BROKER_LISTENER_NAME=INSIDE

      # Single-node dev defaults
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=1
      - ALLOW_PLAINTEXT_LISTENER=yes
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD", "bash", "-c", "echo > /dev/tcp/localhost/9092"]
      interval: 10s
      retries: 10
  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    container_name: auth-service
    env_file:
      - .env
    ports:
      - "3000:3000"    # The auth service will listen on port 3000 inside the container.
    networks:
      - microservices-network
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    env_file:
      - .env
    ports:
      - "443:443"      # API Gateway listens on HTTPS port 443.
    depends_on:
      - auth-service
      - payment-service
      - shipping-service
      - notifications-service
      - user-service
    networks:
      - microservices-network
  user-service:
    build:
      context: ./users
      dockerfile: Dockerfile
    container_name: user-service
    env_file:
      - .env
    ports:
      - "3004:3004"
    networks:
      - microservices-network
  payment-service:
    build:
      context: .
      dockerfile: ./payment/Dockerfile
    container_name: payment-service
    env_file:
      - .env
    depends_on:
      - kafka
    environment:
      - KAFKA_BROKER=kafka:9092
    ports:
      - "3001:3001"
    networks:
      - microservices-network
  
  shipping-service:
    build:
      context: .
      dockerfile: ./shipping/Dockerfile
    container_name: shipping-service
    env_file:
     - .env
    depends_on:
     - kafka
    environment:
     - KAFKA_BROKER=kafka:9092
    ports:
     - "3002:3002"
    networks:
     - microservices-network

  notifications-service:
    build:
      context: .   
      dockerfile: notification/Dockerfile
    container_name: notifications-service
    env_file:
     - .env
    depends_on:
     - kafka
    environment:
     - KAFKA_BROKER=kafka:9092
    ports:
     - "3003:3003"
    networks:
     - microservices-network

networks:
  microservices-network:
    driver: bridge
    external: 
      name: shared-network